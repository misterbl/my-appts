// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PasswordReset matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PasswordReset
    dirty={false}
    errors={Object {}}
    handleBlur={[Function]}
    handleChange={[Function]}
    handleReset={[Function]}
    handleSubmit={[Function]}
    history={
        Object {
            "action": "PUSH",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 123,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "key": "",
              "pathname": "",
              "search": "",
              "state": "",
            },
            "push": [Function],
            "replace": [Function],
          }
    }
    initialValues={
        Object {
            "email": "",
          }
    }
    intl={
        Object {
            "formatMessage": [Function],
          }
    }
    isSubmitting={false}
    isValid={false}
    isValidating={false}
    location="location"
    match={
        Object {
            "isExact": true,
            "params": Object {},
            "path": "",
            "url": "",
          }
    }
    onSubmit={[Function]}
    registerField={[Function]}
    resetForm={[Function]}
    setError={[Function]}
    setErrors={[Function]}
    setFieldError={[Function]}
    setFieldTouched={[Function]}
    setFieldValue={[Function]}
    setFormikState={[Function]}
    setStatus={[Function]}
    setSubmitting={[Function]}
    setTouched={[Function]}
    setValues={[Function]}
    submitCount={0}
    submitForm={[Function]}
    touched={Object {}}
    unregisterField={[Function]}
    validateField={[Function]}
    validateForm={8}
    values={
        Object {
            "email": "emailTest",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <p
          className="kidappi white ma0 pt5 w-100"
>
          Kidappi
</p>,
        <div
          className="absolute bottom-2 ph3 w-100 ph7-l ph6-m"
>
          <Unknown>
                    <p
                              className="tc pb2 white"
                    >
                              <FormattedMessage
                                        id="content|passwordreset|directives"
                                        values={Object {}}
                              />
                    </p>
                    <Formik
                              enableReinitialize={false}
                              initialValues={
                                        Object {
                                                  "email": "",
                                                }
                              }
                              isInitialValid={false}
                              onSubmit={[Function]}
                              validateOnBlur={true}
                              validateOnChange={true}
                              validationSchema={
                                        ObjectSchema {
                                                  "_blacklist": RefSet {
                                                    "list": Set {},
                                                    "refs": Map {},
                                                  },
                                                  "_conditions": Array [],
                                                  "_defaultDefault": [Function],
                                                  "_deps": Array [],
                                                  "_excludedEdges": Array [],
                                                  "_exclusive": Object {},
                                                  "_mutate": false,
                                                  "_nodes": Array [
                                                    "email",
                                                  ],
                                                  "_options": Object {
                                                    "abortEarly": true,
                                                    "recursive": true,
                                                  },
                                                  "_type": "object",
                                                  "_typeError": [Function],
                                                  "_whitelist": RefSet {
                                                    "list": Set {},
                                                    "refs": Map {},
                                                  },
                                                  "fields": Object {
                                                    "email": StringSchema {
                                                      "_blacklist": RefSet {
                                                        "list": Set {},
                                                        "refs": Map {},
                                                      },
                                                      "_conditions": Array [],
                                                      "_deps": Array [],
                                                      "_exclusive": Object {
                                                        "required": false,
                                                        "undefined": false,
                                                      },
                                                      "_mutate": false,
                                                      "_options": Object {
                                                        "abortEarly": true,
                                                        "recursive": true,
                                                      },
                                                      "_type": "string",
                                                      "_typeError": [Function],
                                                      "_whitelist": RefSet {
                                                        "list": Set {},
                                                        "refs": Map {},
                                                      },
                                                      "tests": Array [
                                                        [Function],
                                                        [Function],
                                                        [Function],
                                                      ],
                                                      "transforms": Array [
                                                        [Function],
                                                      ],
                                                    },
                                                  },
                                                  "tests": Array [],
                                                  "transforms": Array [
                                                    [Function],
                                                  ],
                                                }
                              }
                    >
                              [Function]
                    </Formik>
          </Unknown>
</div>,
      ],
      "className": "vh-100 green-bg tc ",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Kidappi",
          "className": "kidappi white ma0 pt5 w-100",
        },
        "ref": null,
        "rendered": "Kidappi",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Unknown>
              <p
                            className="tc pb2 white"
              >
                            <FormattedMessage
                                          id="content|passwordreset|directives"
                                          values={Object {}}
                            />
              </p>
              <Formik
                            enableReinitialize={false}
                            initialValues={
                                          Object {
                                                        "email": "",
                                                      }
                            }
                            isInitialValid={false}
                            onSubmit={[Function]}
                            validateOnBlur={true}
                            validateOnChange={true}
                            validationSchema={
                                          ObjectSchema {
                                                        "_blacklist": RefSet {
                                                          "list": Set {},
                                                          "refs": Map {},
                                                        },
                                                        "_conditions": Array [],
                                                        "_defaultDefault": [Function],
                                                        "_deps": Array [],
                                                        "_excludedEdges": Array [],
                                                        "_exclusive": Object {},
                                                        "_mutate": false,
                                                        "_nodes": Array [
                                                          "email",
                                                        ],
                                                        "_options": Object {
                                                          "abortEarly": true,
                                                          "recursive": true,
                                                        },
                                                        "_type": "object",
                                                        "_typeError": [Function],
                                                        "_whitelist": RefSet {
                                                          "list": Set {},
                                                          "refs": Map {},
                                                        },
                                                        "fields": Object {
                                                          "email": StringSchema {
                                                            "_blacklist": RefSet {
                                                              "list": Set {},
                                                              "refs": Map {},
                                                            },
                                                            "_conditions": Array [],
                                                            "_deps": Array [],
                                                            "_exclusive": Object {
                                                              "required": false,
                                                              "undefined": false,
                                                            },
                                                            "_mutate": false,
                                                            "_options": Object {
                                                              "abortEarly": true,
                                                              "recursive": true,
                                                            },
                                                            "_type": "string",
                                                            "_typeError": [Function],
                                                            "_whitelist": RefSet {
                                                              "list": Set {},
                                                              "refs": Map {},
                                                            },
                                                            "tests": Array [
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                            ],
                                                            "transforms": Array [
                                                              [Function],
                                                            ],
                                                          },
                                                        },
                                                        "tests": Array [],
                                                        "transforms": Array [
                                                          [Function],
                                                        ],
                                                      }
                            }
              >
                            [Function]
              </Formik>
</Unknown>,
            false,
          ],
          "className": "absolute bottom-2 ph3 w-100 ph7-l ph6-m",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <p
                  className="tc pb2 white"
>
                  <FormattedMessage
                                    id="content|passwordreset|directives"
                                    values={Object {}}
                  />
</p>,
                <Formik
                  enableReinitialize={false}
                  initialValues={
                                    Object {
                                                      "email": "",
                                                    }
                  }
                  isInitialValid={false}
                  onSubmit={[Function]}
                  validateOnBlur={true}
                  validateOnChange={true}
                  validationSchema={
                                    ObjectSchema {
                                                      "_blacklist": RefSet {
                                                        "list": Set {},
                                                        "refs": Map {},
                                                      },
                                                      "_conditions": Array [],
                                                      "_defaultDefault": [Function],
                                                      "_deps": Array [],
                                                      "_excludedEdges": Array [],
                                                      "_exclusive": Object {},
                                                      "_mutate": false,
                                                      "_nodes": Array [
                                                        "email",
                                                      ],
                                                      "_options": Object {
                                                        "abortEarly": true,
                                                        "recursive": true,
                                                      },
                                                      "_type": "object",
                                                      "_typeError": [Function],
                                                      "_whitelist": RefSet {
                                                        "list": Set {},
                                                        "refs": Map {},
                                                      },
                                                      "fields": Object {
                                                        "email": StringSchema {
                                                          "_blacklist": RefSet {
                                                            "list": Set {},
                                                            "refs": Map {},
                                                          },
                                                          "_conditions": Array [],
                                                          "_deps": Array [],
                                                          "_exclusive": Object {
                                                            "required": false,
                                                            "undefined": false,
                                                          },
                                                          "_mutate": false,
                                                          "_options": Object {
                                                            "abortEarly": true,
                                                            "recursive": true,
                                                          },
                                                          "_type": "string",
                                                          "_typeError": [Function],
                                                          "_whitelist": RefSet {
                                                            "list": Set {},
                                                            "refs": Map {},
                                                          },
                                                          "tests": Array [
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                          ],
                                                          "transforms": Array [
                                                            [Function],
                                                          ],
                                                        },
                                                      },
                                                      "tests": Array [],
                                                      "transforms": Array [
                                                        [Function],
                                                      ],
                                                    }
                  }
>
                  [Function]
</Formik>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <FormattedMessage
                    id="content|passwordreset|directives"
                    values={Object {}}
/>,
                  "className": "tc pb2 white",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "id": "content|passwordreset|directives",
                    "values": Object {},
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": [Function],
                  "enableReinitialize": false,
                  "initialValues": Object {
                    "email": "",
                  },
                  "isInitialValid": false,
                  "onSubmit": [Function],
                  "validateOnBlur": true,
                  "validateOnChange": true,
                  "validationSchema": ObjectSchema {
                    "_blacklist": RefSet {
                      "list": Set {},
                      "refs": Map {},
                    },
                    "_conditions": Array [],
                    "_defaultDefault": [Function],
                    "_deps": Array [],
                    "_excludedEdges": Array [],
                    "_exclusive": Object {},
                    "_mutate": false,
                    "_nodes": Array [
                      "email",
                    ],
                    "_options": Object {
                      "abortEarly": true,
                      "recursive": true,
                    },
                    "_type": "object",
                    "_typeError": [Function],
                    "_whitelist": RefSet {
                      "list": Set {},
                      "refs": Map {},
                    },
                    "fields": Object {
                      "email": StringSchema {
                        "_blacklist": RefSet {
                          "list": Set {},
                          "refs": Map {},
                        },
                        "_conditions": Array [],
                        "_deps": Array [],
                        "_exclusive": Object {
                          "required": false,
                          "undefined": false,
                        },
                        "_mutate": false,
                        "_options": Object {
                          "abortEarly": true,
                          "recursive": true,
                        },
                        "_type": "string",
                        "_typeError": [Function],
                        "_whitelist": RefSet {
                          "list": Set {},
                          "refs": Map {},
                        },
                        "tests": Array [
                          [Function],
                          [Function],
                          [Function],
                        ],
                        "transforms": Array [
                          [Function],
                        ],
                      },
                    },
                    "tests": Array [],
                    "transforms": Array [
                      [Function],
                    ],
                  },
                },
                "ref": null,
                "rendered": [Function],
                "type": [Function],
              },
            ],
            "type": Symbol(react.fragment),
          },
          false,
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <p
            className="kidappi white ma0 pt5 w-100"
>
            Kidappi
</p>,
          <div
            className="absolute bottom-2 ph3 w-100 ph7-l ph6-m"
>
            <Unknown>
                        <p
                                    className="tc pb2 white"
                        >
                                    <FormattedMessage
                                                id="content|passwordreset|directives"
                                                values={Object {}}
                                    />
                        </p>
                        <Formik
                                    enableReinitialize={false}
                                    initialValues={
                                                Object {
                                                            "email": "",
                                                          }
                                    }
                                    isInitialValid={false}
                                    onSubmit={[Function]}
                                    validateOnBlur={true}
                                    validateOnChange={true}
                                    validationSchema={
                                                ObjectSchema {
                                                            "_blacklist": RefSet {
                                                              "list": Set {},
                                                              "refs": Map {},
                                                            },
                                                            "_conditions": Array [],
                                                            "_defaultDefault": [Function],
                                                            "_deps": Array [],
                                                            "_excludedEdges": Array [],
                                                            "_exclusive": Object {},
                                                            "_mutate": false,
                                                            "_nodes": Array [
                                                              "email",
                                                            ],
                                                            "_options": Object {
                                                              "abortEarly": true,
                                                              "recursive": true,
                                                            },
                                                            "_type": "object",
                                                            "_typeError": [Function],
                                                            "_whitelist": RefSet {
                                                              "list": Set {},
                                                              "refs": Map {},
                                                            },
                                                            "fields": Object {
                                                              "email": StringSchema {
                                                                "_blacklist": RefSet {
                                                                  "list": Set {},
                                                                  "refs": Map {},
                                                                },
                                                                "_conditions": Array [],
                                                                "_deps": Array [],
                                                                "_exclusive": Object {
                                                                  "required": false,
                                                                  "undefined": false,
                                                                },
                                                                "_mutate": false,
                                                                "_options": Object {
                                                                  "abortEarly": true,
                                                                  "recursive": true,
                                                                },
                                                                "_type": "string",
                                                                "_typeError": [Function],
                                                                "_whitelist": RefSet {
                                                                  "list": Set {},
                                                                  "refs": Map {},
                                                                },
                                                                "tests": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                            },
                                                            "tests": Array [],
                                                            "transforms": Array [
                                                              [Function],
                                                            ],
                                                          }
                                    }
                        >
                                    [Function]
                        </Formik>
            </Unknown>
</div>,
        ],
        "className": "vh-100 green-bg tc ",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Kidappi",
            "className": "kidappi white ma0 pt5 w-100",
          },
          "ref": null,
          "rendered": "Kidappi",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Unknown>
                <p
                                className="tc pb2 white"
                >
                                <FormattedMessage
                                                id="content|passwordreset|directives"
                                                values={Object {}}
                                />
                </p>
                <Formik
                                enableReinitialize={false}
                                initialValues={
                                                Object {
                                                                "email": "",
                                                              }
                                }
                                isInitialValid={false}
                                onSubmit={[Function]}
                                validateOnBlur={true}
                                validateOnChange={true}
                                validationSchema={
                                                ObjectSchema {
                                                                "_blacklist": RefSet {
                                                                  "list": Set {},
                                                                  "refs": Map {},
                                                                },
                                                                "_conditions": Array [],
                                                                "_defaultDefault": [Function],
                                                                "_deps": Array [],
                                                                "_excludedEdges": Array [],
                                                                "_exclusive": Object {},
                                                                "_mutate": false,
                                                                "_nodes": Array [
                                                                  "email",
                                                                ],
                                                                "_options": Object {
                                                                  "abortEarly": true,
                                                                  "recursive": true,
                                                                },
                                                                "_type": "object",
                                                                "_typeError": [Function],
                                                                "_whitelist": RefSet {
                                                                  "list": Set {},
                                                                  "refs": Map {},
                                                                },
                                                                "fields": Object {
                                                                  "email": StringSchema {
                                                                    "_blacklist": RefSet {
                                                                      "list": Set {},
                                                                      "refs": Map {},
                                                                    },
                                                                    "_conditions": Array [],
                                                                    "_deps": Array [],
                                                                    "_exclusive": Object {
                                                                      "required": false,
                                                                      "undefined": false,
                                                                    },
                                                                    "_mutate": false,
                                                                    "_options": Object {
                                                                      "abortEarly": true,
                                                                      "recursive": true,
                                                                    },
                                                                    "_type": "string",
                                                                    "_typeError": [Function],
                                                                    "_whitelist": RefSet {
                                                                      "list": Set {},
                                                                      "refs": Map {},
                                                                    },
                                                                    "tests": Array [
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                    ],
                                                                    "transforms": Array [
                                                                      [Function],
                                                                    ],
                                                                  },
                                                                },
                                                                "tests": Array [],
                                                                "transforms": Array [
                                                                  [Function],
                                                                ],
                                                              }
                                }
                >
                                [Function]
                </Formik>
</Unknown>,
              false,
            ],
            "className": "absolute bottom-2 ph3 w-100 ph7-l ph6-m",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <p
                    className="tc pb2 white"
>
                    <FormattedMessage
                                        id="content|passwordreset|directives"
                                        values={Object {}}
                    />
</p>,
                  <Formik
                    enableReinitialize={false}
                    initialValues={
                                        Object {
                                                            "email": "",
                                                          }
                    }
                    isInitialValid={false}
                    onSubmit={[Function]}
                    validateOnBlur={true}
                    validateOnChange={true}
                    validationSchema={
                                        ObjectSchema {
                                                            "_blacklist": RefSet {
                                                              "list": Set {},
                                                              "refs": Map {},
                                                            },
                                                            "_conditions": Array [],
                                                            "_defaultDefault": [Function],
                                                            "_deps": Array [],
                                                            "_excludedEdges": Array [],
                                                            "_exclusive": Object {},
                                                            "_mutate": false,
                                                            "_nodes": Array [
                                                              "email",
                                                            ],
                                                            "_options": Object {
                                                              "abortEarly": true,
                                                              "recursive": true,
                                                            },
                                                            "_type": "object",
                                                            "_typeError": [Function],
                                                            "_whitelist": RefSet {
                                                              "list": Set {},
                                                              "refs": Map {},
                                                            },
                                                            "fields": Object {
                                                              "email": StringSchema {
                                                                "_blacklist": RefSet {
                                                                  "list": Set {},
                                                                  "refs": Map {},
                                                                },
                                                                "_conditions": Array [],
                                                                "_deps": Array [],
                                                                "_exclusive": Object {
                                                                  "required": false,
                                                                  "undefined": false,
                                                                },
                                                                "_mutate": false,
                                                                "_options": Object {
                                                                  "abortEarly": true,
                                                                  "recursive": true,
                                                                },
                                                                "_type": "string",
                                                                "_typeError": [Function],
                                                                "_whitelist": RefSet {
                                                                  "list": Set {},
                                                                  "refs": Map {},
                                                                },
                                                                "tests": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                            },
                                                            "tests": Array [],
                                                            "transforms": Array [
                                                              [Function],
                                                            ],
                                                          }
                    }
>
                    [Function]
</Formik>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <FormattedMessage
                      id="content|passwordreset|directives"
                      values={Object {}}
/>,
                    "className": "tc pb2 white",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "id": "content|passwordreset|directives",
                      "values": Object {},
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": [Function],
                    "enableReinitialize": false,
                    "initialValues": Object {
                      "email": "",
                    },
                    "isInitialValid": false,
                    "onSubmit": [Function],
                    "validateOnBlur": true,
                    "validateOnChange": true,
                    "validationSchema": ObjectSchema {
                      "_blacklist": RefSet {
                        "list": Set {},
                        "refs": Map {},
                      },
                      "_conditions": Array [],
                      "_defaultDefault": [Function],
                      "_deps": Array [],
                      "_excludedEdges": Array [],
                      "_exclusive": Object {},
                      "_mutate": false,
                      "_nodes": Array [
                        "email",
                      ],
                      "_options": Object {
                        "abortEarly": true,
                        "recursive": true,
                      },
                      "_type": "object",
                      "_typeError": [Function],
                      "_whitelist": RefSet {
                        "list": Set {},
                        "refs": Map {},
                      },
                      "fields": Object {
                        "email": StringSchema {
                          "_blacklist": RefSet {
                            "list": Set {},
                            "refs": Map {},
                          },
                          "_conditions": Array [],
                          "_deps": Array [],
                          "_exclusive": Object {
                            "required": false,
                            "undefined": false,
                          },
                          "_mutate": false,
                          "_options": Object {
                            "abortEarly": true,
                            "recursive": true,
                          },
                          "_type": "string",
                          "_typeError": [Function],
                          "_whitelist": RefSet {
                            "list": Set {},
                            "refs": Map {},
                          },
                          "tests": Array [
                            [Function],
                            [Function],
                            [Function],
                          ],
                          "transforms": Array [
                            [Function],
                          ],
                        },
                      },
                      "tests": Array [],
                      "transforms": Array [
                        [Function],
                      ],
                    },
                  },
                  "ref": null,
                  "rendered": [Function],
                  "type": [Function],
                },
              ],
              "type": Symbol(react.fragment),
            },
            false,
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
